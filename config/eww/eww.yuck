(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "ðŸ”Š"
            :value volume
            :onchange "amixer -D pulse sset Master {}%")
    (metric :label "ï¡š"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "ðŸ’¾"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time))

(defvar workspaces-names "[1, 2, 3, 4, 5, 6, 7, 8, 9]")

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (for entry in workspaces-names
      (button :class {tags?.[entry - 1]?.focused ?: false ? "active" : "inactive"}
              :onclick "riverctl set-focused-tags ${entry}" entry))))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "ðŸŽµ" ? "ðŸŽµ todo" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  ;"playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")
  "playerctl --follow metadata --format '{{ title }}' || true")

(deflisten tags :iniitial "[]"
    "river-bedload -minified -watch tags")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%a %-d %b, %-I:%M %p'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "10%")
  (bar))
